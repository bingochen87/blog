<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用连续查询及保留策略优化InfluxDB存储空间及内存占用</title>
      <link href="/2019/08/05/optimize-influxdb/"/>
      <url>/2019/08/05/optimize-influxdb/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在在开发的<a href="https://github.com/hyperion-hyn/docker-map3/tree/master/map3-edge" target="_blank" rel="noopener">docker-map3/map3-edge</a>志在做一个去中心化的 <code>map</code> 支持服务，理想状态下是用最低的资源，就可以启动一个 <code>map3</code> 节点，里面包括有反向代理 、缓存、访问日志收集、该节点的系统状态及访客统计信息收集，Docker 镜像的自动更新以及该节点的数据展示。集成了这么多东西，性能优化是很关键的一环。</p><h2 id="现在在使用的功能"><a href="#现在在使用的功能" class="headerlink" title="现在在使用的功能"></a>现在在使用的功能</h2><ul><li><a href="https://github.com/hyperion-hyn/caddy" target="_blank">hyperion-hyn/caddy</a> (fork from <a href="https://github.com/caddyserver/caddy" target="_blank">caddyserver/caddy</a>：用于反向代理及做地图的 tile 文件缓存，未来还会加入 <code>UPNP</code> 、 <code>P2P</code> 及 <code>keyless</code> 功能；</li><li>filebeat：用于访问日志上报到 Elasticsearch；</li><li>telegraf：用于收集节点的 CPU 及内存使用情况，将数据记录到 InfluxDB；</li><li><a href="https://github.com/hyperion-hyn/geostat" target="_blank">hyperion-hyn/geostat</a>：处理访客信息；</li><li><a href="https://github.com/hyperion-hyn/ouroboros" target="_blank">hyperion-hyn/ouroboros</a>(fork from <a href="https://github.com/pyouroboros/ouroboros" target="_blank">pyouroboros/ouroboros</a>：自动更新在运行的 Docker container 的镜像到最新版；</li><li>InfluxDB：记录节点系统监控信息及该节点访客的统计信息，用于在 Grafana中显示；</li><li>Grafana：显示系统监控信息及该节点访客统计信息。</li></ul><h2 id="InfluxDB-没优化前导致的问题"><a href="#InfluxDB-没优化前导致的问题" class="headerlink" title="InfluxDB 没优化前导致的问题"></a>InfluxDB 没优化前导致的问题</h2><p>前文有说过，我们理想的状态下是以最低的配置就可以起一个节点，以 Amazon AWS 免费的 t2.micro 实例类型为例，配置为1 VCPU, 1 GB 内存以及8 GB 存储。要启动这么多功能是一个不小的考验，特别是需要运行一个数据。</p><p>在优化前，如果统计的数据量很小（或者是用户选择展示的时间区间内数据比较小），问题并不大。但我们在测试极端情况时，用 AB Test 去刷数据，并且在 Grafana 里面查看。登录到主机里面查看，可以看到 InfluxDB 占用到了 30% 的内存（1GB的内存配置）, 总内存占用会占到70%多，有时候还会到90%多。刷的数据很多的时候，存储也会有问题，毕竟才8 GB 的存储空间。</p><p><img src="https://bingozai.s3.ap-east-1.amazonaws.com/blog/2019/08/05/influxdb.png" alt="没优化前的内存占用"></p><h2 id="如何优化"><a href="#如何优化" class="headerlink" title="如何优化"></a>如何优化</h2><h3 id="查找问题"><a href="#查找问题" class="headerlink" title="查找问题"></a>查找问题</h3><p>优化存储的话，基本是基于 InfluxDB 的 <code>Retention Policies</code> 做处理就可以，我们默认是保留30天的数据。但这个其实数据也挺多的了，还可以再优化。</p><p>优化内存占用，首页要确定的是在写 InfluxDB 数据的时候就会占用很多内存还是说在查看的时候数据量比较大占用的内存比较多。</p><p>写入 InfluxDB 有两种请求方式</p><ul><li>http</li><li>UDP</li></ul><p>我在测试的时候，无论是用http还是UDP，用 <code>BatchPoints</code> 的方式快速写入 50K 条数据，内存基本没什么波动。但如果是在 Grafana 后台去展示数据，数据量越多，占用的内存就越高。所以可以确定的是内存占用高是查询太多数据造成的。</p><h3 id="优化处理资料"><a href="#优化处理资料" class="headerlink" title="优化处理资料"></a>优化处理资料</h3><p>查了很多资料，都是说用 <code>Continuous Queries</code> + <code>Retention Policies</code> 可以优化，但都没有详细的说明。后来我们团队的大佬 <a href="https://github.com/zouguangxian" target="_blank" rel="noopener">邹光先</a>先生 找到了 <a href="https://pommi.nethuis.nl/collectd-influxdb-grafana-with-downsampling/" target="_blank" rel="noopener">Server stats with collectd, InfluxDB and Grafana (with downsampling)</a> 这个有关 InfluxDB 数据下采样处理的文章，根据这个文章提供的方法结合我们的实际情况处理。</p><h3 id="优化处理"><a href="#优化处理" class="headerlink" title="优化处理"></a>优化处理</h3><p><a href="https://pommi.nethuis.nl/collectd-influxdb-grafana-with-downsampling/" target="_blank" rel="noopener">Server stats with collectd, InfluxDB and Grafana (with downsampling)</a> 的基本策略就是用 <code>Continuous Queries</code> + <code>Retention Policies</code>。</p><ul><li><p><code>Retention Policies</code> 保留策略我们是使用以下几种：</p><ul><li>autogen：<code>autogen</code> 默认是永久存储的，我们将它的保留策略改为 <code>200m</code>（为什么是200分钟，因为在 Grafana Dashboard 里面如果是选择 Last 3 hours，应用的保留策略是 <code>autogen</code> 的，如果是选择 Last 6 hours，应用的保留策略就会变成 <code>day</code>）</li><li>day: </li><li>week</li><li>month</li><li>year</li></ul></li><li><p><code>Continuous Queries</code> 我们是生成了以下几条：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> CONTINUOUS QUERY \"cq_day\" <span class="token keyword">ON</span> \"$<span class="token keyword">database</span>\" <span class="token keyword">BEGIN</span> <span class="token keyword">SELECT</span> <span class="token function">sum</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token keyword">as</span> count <span class="token keyword">INTO</span> \"$<span class="token keyword">database</span>\"<span class="token punctuation">.</span>\"day\"<span class="token punctuation">.</span>:MEASUREMENT <span class="token keyword">FROM</span> <span class="token operator">/</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">/</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> time<span class="token punctuation">(</span>60s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span> <span class="token keyword">END</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> CONTINUOUS QUERY \"cq_week\" <span class="token keyword">ON</span> \"$<span class="token keyword">database</span>\" <span class="token keyword">BEGIN</span> <span class="token keyword">SELECT</span> <span class="token function">sum</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token keyword">as</span> count <span class="token keyword">INTO</span> \"$<span class="token keyword">database</span>\"<span class="token punctuation">.</span>\"week\"<span class="token punctuation">.</span>:MEASUREMENT <span class="token keyword">FROM</span> <span class="token operator">/</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">/</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> time<span class="token punctuation">(</span>300s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span> <span class="token keyword">END</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> CONTINUOUS QUERY \"cq_month\" <span class="token keyword">ON</span> \"$<span class="token keyword">database</span>\" <span class="token keyword">BEGIN</span> <span class="token keyword">SELECT</span> <span class="token function">sum</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token keyword">as</span> count <span class="token keyword">INTO</span> \"$<span class="token keyword">database</span>\"<span class="token punctuation">.</span>\"month\"<span class="token punctuation">.</span>:MEASUREMENT <span class="token keyword">FROM</span> <span class="token operator">/</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">/</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> time<span class="token punctuation">(</span>1800s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span> <span class="token keyword">END</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> CONTINUOUS QUERY \"cq_year\" <span class="token keyword">ON</span> \"$<span class="token keyword">database</span>\" <span class="token keyword">BEGIN</span> <span class="token keyword">SELECT</span> <span class="token function">sum</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token keyword">as</span> count <span class="token keyword">INTO</span> \"$<span class="token keyword">database</span>\"<span class="token punctuation">.</span>\"year\"<span class="token punctuation">.</span>:MEASUREMENT <span class="token keyword">FROM</span> <span class="token operator">/</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">/</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> time<span class="token punctuation">(</span>21600s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span> <span class="token keyword">END</span><span class="token punctuation">;</span></code></pre></li></ul><p><code>https://github.com/hyperion-hyn/docker-map3/blob/keyless/map3-edge/docker/geostat/rootfs/optimize-influxdb.sh</code> 的示例代码，<code>telegraf</code> 的也是差不多的</p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token comment" spellcheck="true"># refer: https://pommi.nethuis.nl/collectd-influxdb-grafana-with-downsampling/</span>options<span class="token operator">=</span>`cat /etc/geostat/geostat.json <span class="token operator">|</span> <span class="token function">grep</span> -E <span class="token string">'(port|host|database)'</span> <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'s/"[ ]*:[ ]*"/":"/g'</span> -e <span class="token string">'s/^[ ]*//'</span> -e <span class="token string">'s/,[ ]*$//'</span><span class="token variable"><span class="token variable">`</span>database<span class="token operator">=</span><span class="token variable">`</span></span><span class="token function">printf</span> <span class="token string">"<span class="token variable">$options</span>"</span> <span class="token operator">|</span> <span class="token function">sed</span> -n -e <span class="token string">'/database/p'</span> <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'s/^[^:]*://'</span> -e <span class="token string">'s/"//g'</span><span class="token variable"><span class="token variable">`</span>host<span class="token operator">=</span><span class="token variable">`</span></span><span class="token function">printf</span> <span class="token string">"<span class="token variable">$options</span>"</span> <span class="token operator">|</span> <span class="token function">sed</span> -n -e <span class="token string">'/host/p'</span> <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'s/^[^:]*://'</span> -e <span class="token string">'s/"//g'</span><span class="token variable"><span class="token variable">`</span>port<span class="token operator">=</span><span class="token variable">`</span></span><span class="token function">printf</span> <span class="token string">"<span class="token variable">$options</span>"</span> <span class="token operator">|</span> <span class="token function">sed</span> -n -e <span class="token string">'/port/p'</span> <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'s/^[^:]*://'</span> -e <span class="token string">'s/"//g'</span>`<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token operator">!</span> -z <span class="token string">"<span class="token variable">$host</span>"</span> -a <span class="token operator">!</span> -z <span class="token string">"<span class="token variable">$port</span>"</span> -a <span class="token operator">!</span> -z <span class="token string">"<span class="token variable">$database</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>url<span class="token operator">=</span><span class="token string">"http://<span class="token variable">$host</span>:<span class="token variable">$port</span>"</span>curl --retry 10 --retry-connrefused --retry-delay 1 <span class="token string">"<span class="token variable">$url</span>/ping"</span>curl -i -XPOST <span class="token string">"<span class="token variable">$url</span>/query"</span> --data-urlencode <span class="token string">"q=CREATE DATABASE <span class="token variable">$database</span>;ALTER RETENTION POLICY \"autogen\" on <span class="token variable">$database</span> DURATION 200m SHARD DURATION 1h;CREATE RETENTION POLICY \"day\" ON <span class="token variable">$database</span> DURATION 1d REPLICATION 1;CREATE RETENTION POLICY \"week\" ON <span class="token variable">$database</span> DURATION 7d REPLICATION 1;CREATE RETENTION POLICY \"month\" ON <span class="token variable">$database</span> DURATION 31d REPLICATION 1;CREATE RETENTION POLICY \"year\" ON <span class="token variable">$database</span> DURATION 366d REPLICATION 1;CREATE CONTINUOUS QUERY \"cq_day\" ON \"<span class="token variable">$database</span>\" BEGIN SELECT sum(count) as count INTO \"<span class="token variable">$database</span>\".\"day\".:MEASUREMENT FROM /.*/ GROUP BY time(60s),* END;CREATE CONTINUOUS QUERY \"cq_week\" ON \"<span class="token variable">$database</span>\" BEGIN SELECT sum(count) as count INTO \"<span class="token variable">$database</span>\".\"week\".:MEASUREMENT FROM /.*/ GROUP BY time(300s),* END;CREATE CONTINUOUS QUERY \"cq_month\" ON \"<span class="token variable">$database</span>\" BEGIN SELECT sum(count) as count INTO \"<span class="token variable">$database</span>\".\"month\".:MEASUREMENT FROM /.*/ GROUP BY time(1800s),* END;CREATE CONTINUOUS QUERY \"cq_year\" ON \"<span class="token variable">$database</span>\" BEGIN SELECT sum(count) as count INTO \"<span class="token variable">$database</span>\".\"year\".:MEASUREMENT FROM /.*/ GROUP BY time(21600s),* END;CREATE RETENTION POLICY \"forever\" ON \"<span class="token variable">$database</span>\" DURATION INF REPLICATION 1;"</span>curl -i -XPOST <span class="token string">"<span class="token variable">$url</span>/write?db=<span class="token variable">$database</span>&amp;rp=forever"</span> --data-binary <span class="token string">"rp_config,idx=1 rp=\"autogen\",start=0i,end=12000000i,interval=\"10s\" -9223372036854775806rp_config,idx=2 rp=\"day\",start=12000000i,end=86401000i,interval=\"60s\" -9223372036854775806rp_config,idx=3 rp=\"week\",start=86401000i,end=604801000i,interval=\"300s\" -9223372036854775806rp_config,idx=4 rp=\"month\",start=604801000i,end=2678401000i,interval=\"1800s\" -9223372036854775806rp_config,idx=5 rp=\"year\",start=2678401000i,end=31622401000i,interval=\"21600s\" -9223372036854775806"</span><span class="token keyword">fi</span><span class="token keyword">exit</span> 0</code></pre><p><strong>特别提醒，优化后的处理，需要的 Grafana 版本在6.x或以上。 Grafana Dashboard 的配置，参考<a href="https://github.com/hyperion-hyn/docker-map3/blob/master/map3-edge/docker/grafana/rootfs/dashboards/default.json" target="_blank" rel="noopener">https://github.com/hyperion-hyn/docker-map3/blob/master/map3-edge/docker/grafana/rootfs/dashboards/default.json</a></strong></p><h2 id="优化后表现"><a href="#优化后表现" class="headerlink" title="优化后表现"></a>优化后表现</h2><p>经过优化后，InfluxDB 的内存占用，很好地控制在 10% 以下，在Grafana 后台可以看到 <code>map3-edge</code> 的总内存占用（以1 GB 配置为例），维持在 50% 以下。</p><p><img src="https://bingozai.s3.ap-east-1.amazonaws.com/blog/2019/08/05/optimize-influxdb.png" alt="优化后的内存占用"></p><h2 id="遗留的问题"><a href="#遗留的问题" class="headerlink" title="遗留的问题"></a>遗留的问题</h2><p>虽然用 <code>Continuous Queries</code> + <code>Retention Policies</code> 做了处理，但其实大家都可以看出来如果是在短时间内有大量访问后，用 Last 3 hours （或者是更小的时间）查看，这个等于是没做优化的，内存占用还是会很多，这个暂时无解。</p><p>还有就是 <code>Continuous Queries</code> 的 GEO 信息处理，是会根据 city 做 group by，所以如果是访问的地区比较分散的话，要生成的数据其实也是比较多。这种情况下，优化得并不是很好。好在我们希望的 <code>map3-edge</code> 是在每个城市都有部署，这样根据 city 做 group by 这种在以后节点越来越多后，就不再是一个问题。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://pommi.nethuis.nl/collectd-influxdb-grafana-with-downsampling/" target="_blank" rel="noopener">Server stats with collectd, InfluxDB and Grafana (with downsampling)</a> </li><li><a href="https://docs.influxdata.com/influxdb/v1.7/guides/downsampling_and_retention/" target="_blank" rel="noopener">Downsampling and data retention</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> InfluxDB </tag>
            
            <tag> 时序数据库 </tag>
            
            <tag> InfluxDB存储优化 </tag>
            
            <tag> InfluxDB内存优化 </tag>
            
            <tag> Continuous Queries </tag>
            
            <tag> Retention Policies </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kibana Sample Logs Data Dashboard</title>
      <link href="/2019/08/02/sample-logs-data/"/>
      <url>/2019/08/02/sample-logs-data/</url>
      
        <content type="html"><![CDATA[<p>因为<code>map3-node-edge</code>从原来的<code>map3-edge-dashboard</code>移到<code>docker-map3/map3-edge</code>并开源了。过程中做了优化处理，去掉了几个<code>docner container</code>，其中包括<code>metricbeat</code>和<code>heartbeat</code>。在处理总的<code>Kibana dashboard</code>过程中，不小心将几个索引数据删除掉了，导致<code>[Logs] Web Traffic</code>这个Dashboard用不了。</p><p>我首选想到的办法，居然是傻傻地照着原来的设置一个个地加回来，并且因为现在只剩下<code>filebeat</code>这个数据源，我天真地以为<code>kibana_sample_logs_data</code>这个索引数据是从其他两个已经是删除的beat来的，有些字段还对不上。</p><p>折腾一番后，查了一下<code>kibana_sample_logs_data</code>发现这个数据是可以手动添加了。操作后，最终发现整个<code>[Logs] Web Traffic</code>这个Dashboard，就是点几下就可以出来，根本不需要自己去配置。哎，业务不精，真的是害死人。</p><p>添加方法:</p><ul><li>去到kibana首页（我使用的是KibanaCloud,首页的url为：app/kibana#/home）</li><li>在<code>Add sample data</code>这里，点击下方的链接（<code>Load a data set and a Kibana dashboard</code>）</li><li>跳转后，在列表里面的<code>Sample web logs</code>点击按钮</li><li>等待处理完成，就可以在<code>Dashboard</code>这一个链接页面里面看到有<code>[Logs] Web Traffic</code>这个Dashboard</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kibana </tag>
            
            <tag> ES </tag>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deploy Map3 Edge on AWS</title>
      <link href="/2019/08/02/deploy-map3-on-aws/"/>
      <url>/2019/08/02/deploy-map3-on-aws/</url>
      
        <content type="html"><![CDATA[<h2 id="Deploy-Map3-Edge-On-Amazon-AWS"><a href="#Deploy-Map3-Edge-On-Amazon-AWS" class="headerlink" title="Deploy Map3 Edge On Amazon AWS"></a>Deploy Map3 Edge On Amazon AWS</h2><hr><h3 id="Step1-Create-an-account-and-Key-Pair"><a href="#Step1-Create-an-account-and-Key-Pair" class="headerlink" title="Step1: Create an account and Key Pair"></a>Step1: Create an account and Key Pair</h3><ul><li>Create an account (Please follow AWS instructions)</li><li>Sign in to AWS console</li><li>Create key Pair<ul><li>Choose your preferred country (region)<ul><li><a href="https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">US East (Ohio)</a></li><li><a href="https://us-east-2.console.aws.amazon.com/ec2/v2/home?region=us-east-2#KeyPairs:sort=keyName" target="_blank" rel="noopener">US East (N. Virginia)</a></li><li><a href="https://us-west-1.console.aws.amazon.com/ec2/v2/home?region=us-west-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">US West (N. California)</a></li><li><a href="https://us-west-2.console.aws.amazon.com/ec2/v2/home?region=us-west-2#KeyPairs:sort=keyName" target="_blank" rel="noopener">US West (Oregon)</a></li><li><a href="https://ap-south-1.console.aws.amazon.com/ec2/v2/home?region=ap-south-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">Asia Pacific (Mumbai)</a></li><li><a href="https://ap-northeast-2.console.aws.amazon.com/ec2/v2/home?region=ap-northeast-2#KeyPairs:sort=keyName" target="_blank" rel="noopener">Asia Pacific (Seoul)</a></li><li><a href="https://ap-southeast-1.console.aws.amazon.com/ec2/v2/home?region=ap-southeast-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">Asia Pacific (Singapore)</a></li><li><a href="https://ap-southeast-2.console.aws.amazon.com/ec2/v2/home?region=ap-southeast-2#KeyPairs:sort=keyName" target="_blank" rel="noopener">Asia Pacific (Sydney)</a></li><li><a href="https://ap-northeast-1.console.aws.amazon.com/ec2/v2/home?region=ap-northeast-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">Asia Pacific (Tokyo)</a></li><li><a href="https://ap-east-1.console.aws.amazon.com/ec2/v2/home?region=ap-east-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">Asia Pacific (Hong Kong)</a></li><li><a href="https://ca-central-1.console.aws.amazon.com/ec2/v2/home?region=ca-central-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">Canada (Central)</a></li><li><a href="https://eu-central-1.console.aws.amazon.com/ec2/v2/home?region=eu-central-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">EU (Frankfurt)</a></li><li><a href="https://eu-west-1.console.aws.amazon.com/ec2/v2/home?region=eu-west-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">EU (Ireland)</a></li><li><a href="https://eu-west-2.console.aws.amazon.com/ec2/v2/home?region=eu-west-2#KeyPairs:sort=keyName" target="_blank" rel="noopener">EU (London)</a></li><li><a href="https://eu-west-3.console.aws.amazon.com/ec2/v2/home?region=eu-west-3#KeyPairs:sort=keyName" target="_blank" rel="noopener">EU (Paris)    </a></li><li><a href="https://eu-north-1.console.aws.amazon.com/ec2/v2/home?region=eu-north-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">EU (Stockholm)</a></li><li><a href="https://sa-east-1.console.aws.amazon.com/ec2/v2/home?region=sa-east-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">South America (São Paulo)</a></li><li><a href="https://me-south-1.console.aws.amazon.com/ec2/v2/home?region=me-south-1#KeyPairs:sort=keyName" target="_blank" rel="noopener">Middle East (Bahrain)</a></li></ul></li><li>Click “Create key Pair” button in the page center to create your first key pair<br><img src="https://cdn-images-1.medium.com/max/1600/1*D26GBkbpgfWVZjd1q3UGHw.png" alt></li><li>Create your own key pair name<br><img src="https://cdn-images-1.medium.com/max/1600/1*6Y3ivlLZpo1_QaQi_NphjQ.png" alt></li><li>Click “Create Key Pair” button<ol><li>The Browser will automatically download a key pair file, please save the file for future logins to Amazon Elastic Compute Cloud (EC2).</li><li>File names may vary across different operational systems<br><img src="https://cdn-images-1.medium.com/max/1600/1*3pUkD6cttkm0aFY9b_-FsQ.png" alt></li></ol></li></ul></li></ul><h3 id="Step2-Deploy-Map3-edge-node"><a href="#Step2-Deploy-Map3-edge-node" class="headerlink" title="Step2: Deploy Map3 edge node"></a>Step2: Deploy Map3 edge node</h3><ul><li><p>Click the following link to create new stack.</p><ul><li><a href="https://us-east-2.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">US East (Ohio)</a></li><li><a href="https://us-east-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">US East (N. Virginia)</a></li><li><a href="https://us-west-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">US West (N. California)</a></li><li><a href="https://us-west-2.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">US West (Oregon)</a></li><li><a href="https://ap-south-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Asia Pacific (Mumbai)</a></li><li><a href="https://ap-northeast-2.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Asia Pacific (Seoul)</a></li><li><a href="https://ap-southeast-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Asia Pacific (Singapore)</a></li><li><a href="https://ap-southeast-2.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Asia Pacific (Sydney)</a></li><li><a href="https://ap-northeast-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Asia Pacific (Tokyo)</a></li><li><a href="https://ap-east-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t3.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Asia Pacific (Hong Kong)</a></li><li><a href="https://ca-central-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Canada (Central)</a></li><li><a href="https://eu-central-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">EU (Frankfurt)</a></li><li><a href="https://eu-west-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">EU (Ireland)</a></li><li><a href="https://eu-west-2.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">EU (London)</a></li><li><a href="https://eu-west-3.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">EU (Paris)</a></li><li><a href="https://eu-north-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t3.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">EU (Stockholm)</a></li><li><a href="https://sa-east-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t2.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">South America (São Paulo)</a></li><li><a href="https://me-south-1.console.aws.amazon.com/cloudformation/home#/stacks/create/review?templateURL=https://s3-ap-southeast-1.amazonaws.com/hyn.static/cloud-formation/map3-edge-node-cloud-formation.json&stackName=map3-edge&param_InstanceType=t3.micro&param_SSHLocation=0.0.0.0/0" target="_blank" rel="noopener">Middle East (Bahrain)</a></li></ul></li><li><p>Specify Details. Fill in Stack name, select default InstanceType t2.micro (For Hong Kong, Stockholm and Bahrain region, please choose ‘t3.micro’), and choose the keyname you used when creating key pair in the dropdown menu</p><p>  Users are recommend to choose ‘t2.micro’, which is a free usage tier.Per month, the AWS free usage tier covers: 750-hour usage and 15GB of bandwidth out aggregated across all AWS services. (Please check <a href="https://aws.amazon.com/ec2/instance-types/" target="_blank" rel="noopener">AWS official websites</a> for more details about <strong>Free Usage Tier</strong>). <strong>When all information filled, click “Create” button to start creating the edge node.</strong><br>  <img src="https://cdn-images-1.medium.com/max/1600/1*uqeOBPmQs2stSd-wZivOkg.png" alt></p></li><li><p>You have now created an edge node. Wait <strong>2–3 minutes</strong> for the system to confirm.<br>  <img src="https://cdn-images-1.medium.com/max/1600/1*Y-6rlhXoublU1x38hNSKeQ.png" alt></p></li><li><p>Check your edge node operation status by visiting the link below:<a href="https://console.aws.amazon.com/ec2/v2/home#Instances:sort=desc:instanceState" target="_blank" rel="noopener">https://console.aws.amazon.com/ec2/v2/home#Instances:sort=desc:instanceState</a> Choose your preferred region if you need when opening the link above.<br>Remember to obtain your public IP (you need <strong>Ipv4</strong> to view individual node Dashboard)<br><img src="https://cdn-images-1.medium.com/max/1600/1*_jh-kTTxVRbho7cxbDhyRA.png" alt></p></li><li><p>The node is being prepared</p></li><li><p>The node is in operation<br>  <img src="https://cdn-images-1.medium.com/max/1600/1*LN1hZvluj51ZMRJuhA2quA.png" alt></p></li></ul><p><strong>Tip. 1</strong> Enter you public IP(IPV4 ONLY) on your browser, you can see your own map node dashboard. The username and password for dashboard is “<strong>admin</strong>”</p><p><strong>Tip. 2</strong> Once you deploy the node, you <strong>don’t</strong> have to always keep your computers live or AWS account logged in.</p><p><strong>Tip. 3</strong> You can raise as many Map 3 notes as you wish as long as you follow the instruction above. But please note that Amazon might <strong>charge</strong> you for this as <strong>t2.micro</strong> has limited free usage and bandwidth.</p><h3 id="Step3-How-to-delete-a-node"><a href="#Step3-How-to-delete-a-node" class="headerlink" title="Step3: How to delete a node"></a>Step3: How to delete a node</h3><ul><li>Click “<strong>Create Stack</strong>”dropdown menu, and choose delete Stack<br><img src="https://cdn-images-1.medium.com/max/1600/1*GnKXIreHYOOrP2rEC5U2gw.png" alt></li><li>Click “<strong>Yes, Delete</strong>” to delete Stack<br><img src="https://cdn-images-1.medium.com/max/1600/1*k-4wfW2QNci3DUVVRPoOTQ.png" alt></li><li>Confirm your status<br><img src="https://cdn-images-1.medium.com/max/1600/1*EoHdsWkCEXu0_7VwANeE6w.png" alt></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Map3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Map3 </tag>
            
            <tag> Hyperion </tag>
            
            <tag> HYN </tag>
            
            <tag> Map </tag>
            
            <tag> AWS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install Map3 Edge</title>
      <link href="/2019/08/02/install-map3-edge-on-linux-or-mac/"/>
      <url>/2019/08/02/install-map3-edge-on-linux-or-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="Install-Map3-Edge-On-Linux-Or-Mac"><a href="#Install-Map3-Edge-On-Linux-Or-Mac" class="headerlink" title="Install Map3 Edge On Linux Or Mac"></a>Install Map3 Edge On Linux Or Mac</h2><hr><h3 id="Install-from-script"><a href="#Install-from-script" class="headerlink" title="Install from script"></a>Install from script</h3><h4 id="Curl"><a href="#Curl" class="headerlink" title="Curl"></a>Curl</h4><p>To launch a map3 edge, you can use the install script using cURL:</p><pre class=" language-bash"><code class="language-bash">curl -o- https://hyperion-deploy.s3-ap-southeast-1.amazonaws.com/edge/install.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span></code></pre><h4 id="Wget"><a href="#Wget" class="headerlink" title="Wget"></a>Wget</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> -qO- https://hyperion-deploy.s3-ap-southeast-1.amazonaws.com/edge/install.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Map3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Map3 </tag>
            
            <tag> Linux </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deploy Map3 Edge on AliCloud</title>
      <link href="/2019/08/02/deploy-map3-on-alicloud/"/>
      <url>/2019/08/02/deploy-map3-on-alicloud/</url>
      
        <content type="html"><![CDATA[<h2 id="Deploy-Map3-Edge-On-AliCloud"><a href="#Deploy-Map3-Edge-On-AliCloud" class="headerlink" title="Deploy Map3 Edge On AliCloud"></a>Deploy Map3 Edge On AliCloud</h2><hr><h3 id="Step1-Create-an-account"><a href="#Step1-Create-an-account" class="headerlink" title="Step1: Create an account"></a>Step1: Create an account</h3><hr><ul><li>Please refer to Aliyun’s official instructions to create your account. For more details please <a href="https://help.aliyun.com/knowledge_detail/37195.html" target="_blank" rel="noopener">click</a></li></ul><h3 id="Step2-Deploy-Map3-edge-node"><a href="#Step2-Deploy-Map3-edge-node" class="headerlink" title="Step2: Deploy Map3 edge node"></a>Step2: Deploy Map3 edge node</h3><p><strong><em>Pre-requisite: you need to deposit at least 100 RMB in Aliyun account to deploy an edge node</em></strong></p><hr><ul><li><p>Use Open resource orchestration management (ROS) to deploy, please choose the following recommend regions:</p><ul><li><p><a href="https://ros.console.aliyun.com/#/stack/cn-qingdao/list" target="_blank" rel="noopener">N1 of China (Qingdao)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/cn-beijing/list" target="_blank" rel="noopener">N2 of China (Beijing)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/cn-zhangjiakou/list" target="_blank" rel="noopener">N3 of China (Zhangjiakou)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/cn-huhehaote/list" target="_blank" rel="noopener">N5 of China (Huhehaote)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/cn-hangzhou/list" target="_blank" rel="noopener">E1 of China (Hangzhou)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/cn-shanghai/list" target="_blank" rel="noopener">E2 of China (Shanghai)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/cn-hongkong/list" target="_blank" rel="noopener">HK</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/ap-southeast-1/list" target="_blank" rel="noopener">Singapore</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/ap-southeast-3/list" target="_blank" rel="noopener">Malaysia (Kuala Lumpur)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/ap-southeast-5/list" target="_blank" rel="noopener">Indonesia (Jakarta)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/ap-northeast-1/list" target="_blank" rel="noopener">Japan (Tokyo)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/us-west-1/list" target="_blank" rel="noopener">U.S.A (Silicon Valley)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/eu-central-1/list" target="_blank" rel="noopener">Germany (Frankfurt)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/ap-south-1/list" target="_blank" rel="noopener">India (Mumbai)</a></p></li><li><p><a href="https://ros.console.aliyun.com/#/stack/eu-west-1/list" target="_blank" rel="noopener">UK (London)</a> </p><p><img src="https://static.hyn.space/aliyun-ros/en/001.png" alt></p></li></ul></li><li><p>Click the right corner “New Resource Stack”</p></li><li><p>Follow the steps below on the opened page</p><ul><li>Choose your preferred region (the example is HK)</li><li>Choose “URL” in dropdown menu of “Template source”</li><li>In “Template URL” copy <a href="http://map3.oss-cn-hongkong.aliyuncs.com/aliyun-ros-deploy-map3-edge-node.json" target="_blank" rel="noopener">http://map3.oss-cn-hongkong.aliyuncs.com/aliyun-ros-deploy-map3-edge-node.json</a></li><li>Click “Next”</li></ul><p><img src="https://static.hyn.space/aliyun-ros/en/002.png" alt></p></li><li><p>Fill in the following information in Stack Management</p><ul><li>Stack name (Must be between 1 and 64 characters long, must initiate with letters, can contain number, “_” or “-“)</li><li>Use default for “Creation timeout” and “Roll back”</li><li>Use default for “ECS Image – ubuntu_16”</li><li>In usual circumstances, there’s no need to change the default “ECS Instance Type”. But when some regions lack resources, and shows no default “ECS Instance Type”, pls select in the dropdown menu for other “ECS Instance Type” and try again</li><li>Fill in password in “InstanceLoginPassword” and (Please Confirm) “InstanceLoginPassword” - must include Capital Letters, numbers, special letters (at lease 3 types), must be between 8 and 21 characters long</li><li>Click “Create”<br><img src="https://static.hyn.space/aliyun-ros/en/003.png" alt></li></ul></li></ul><p>If the information filled is correct, webpage will jump to “Request Submitted Successfully”. On this page, click “Go to the Events List” to check details of node deployment<br><img src="https://static.hyn.space/aliyun-ros/en/004.png" alt></p><p>“Events List” page will present your node progress. When webpage (will automatically refresh) shows “Stack CREATE Completed” (normally it takes 3-5 min), it means your edge node has been successfully deployed. Click the link in “Related Resource ID” to check “Stack Overview”<br><img src="https://static.hyn.space/aliyun-ros/en/005.png" alt></p><p>In “Stack Overview” can find the “PublicIp” of the Map3 node just created. IP can be used to view the map service status you initiated<br><img src="https://static.hyn.space/aliyun-ros/en/006.png" alt></p><p>Copy “PublicIp” and paste the address to browser to visit Map services. Pls fill in your contact details in “Support us” and click submit. We will contact you when edge node technology is updated.<br><img src="https://static.hyn.space/aliyun-ros/en/007.png" alt></p><p>Click the right corner to view individual node Dashboard, both login name and password for dashboard are “admin”</p><p><strong>Step3: Switch “Instance Settings” from bandwidth to subscriptions</strong></p><hr><p>Visit Instance Page via the link below (The example is HK): <a href="https://ecs.console.aliyun.com/?spm=5176.2020520101.aliyun_sidebar.aliyun_sidebar_ecs.70a27d33y7jaFa#/server/region/cn-hongkong" target="_blank" rel="noopener">https://ecs.console.aliyun.com/?spm=5176.2020520101.aliyun_sidebar.aliyun_sidebar_ecs.70a27d33y7jaFa#/server/region/cn-hongkong</a></p><p>Click the click “More” at the right side, and click Instance Settings – Switch to Subscription<br><img src="https://static.hyn.space/aliyun-ros/en/008.png" alt><br>In the pop-up page, click “Please click Batch Change”<br><img src="https://static.hyn.space/aliyun-ros/en/009.png" alt><br>On pop-up page, choose your preferred service length, and tick “Switch to subscription disk”, and click “OK”.<br><img src="https://static.hyn.space/aliyun-ros/en/010.png" alt></p><p> <strong>Now your edge node deployment is complete.</strong></p><p><strong>Options: To delete a Node</strong><br><strong><em>Please follow the instructions below to delete an edge node</em></strong></p><hr><p>On the page of “Stack Management”, click to “delete” the node stack you request<br><img src="https://static.hyn.space/aliyun-ros/en/delete-001.png" alt><br>It takes 1-2 minutes to delete a node<br><img src="https://static.hyn.space/aliyun-ros/en/delete-002.png" alt></p><h3 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h3><p><strong>Please send your inquiries to Hyperion Forum via <a href="https://talk.hyn.space" target="_blank" rel="noopener">talk.hyn.space</a> if you have encountered any problems. Or send an email to <a href="mailto:chenbin@hyn.space" target="_blank" rel="noopener">chenbin@hyn.space</a> for technical issues.</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Map3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Map3 </tag>
            
            <tag> Hyperion </tag>
            
            <tag> HYN </tag>
            
            <tag> AliCloud </tag>
            
            <tag> Map </tag>
            
            <tag> Aliyun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，互联网世界。</title>
      <link href="/2019/08/02/hello-world/"/>
      <url>/2019/08/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>   想想，还是写点什么吧，至少得记录一下心情，记录一下学习的东西，可以随时翻翻，朋友圈实在是不适合啊。</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
